// ==UserScript==
// @name         MyDealz Enhanced Script
// @namespace    http://tampermonkey.net/
// @version      1.3
// @description  Kombiniert Funktionen zum Hervorheben und Ausblenden von Deals auf mydealz.de
// @author       Dein Name
// @license      MIT
// @match        https://www.mydealz.de/*
// @grant        none
// ==/UserScript==

(function() {
    'use strict';

    // Konfiguration der Skripteinstellungen

    const Geizfaktor = 6; // Hier trägst du die Mindestersparniss ein die du haben möchtest
    const Geizfaktorghost = '0.5'; // Transparenz für niedrige Ersparnis
    const Geizfaktorvisible = 'yes'; // 'yes' oder 'none' --> Ausblendung bei niedriger Ersparnis

    const Maximalpreis = 500; // Maximal akzeptierter Preis für Deals
    const Maximalpreisghost = '0.3'; // Transparenz für hohe Preise
    const Maximalpreisvisible = 'yes'; // 'yes' oder 'none' --> Ausblendung bei hohen Preisen

    const Hotnessghost = '1'; // Transparenz für "warme" Deals
    const Hotnessvisible = 'yes'; // 'yes' oder 'none' --> Ausblendung bei niedriger Hotness

    const excludeWords = ['wallbox','balkonkraftwerk','neufahrzeug','kinopolis','leasing', 'nähmaschine', 'direktflug', 'playstation', 'xbox', 'iphone', 'direktflüge','nfl game pass', 'mähroboter', 'ps5', 'gravelbike', 'katzenfutter','hunkemöller', 'rasenmäher', 'swarovski', 'dvd', 'yfood', 'bluray', 'vinyl', 'corporate benefits', 'nike air max', 'macos', 'ipad', 'iphones','ipads', 'schallplatte', 'gewerbeleasing', 'itunes', 'privatleasing', 'payback', 'shoop', 'ps store', 'mcfit', 'fressnapf', 'blu-ray', 'meta quest', 'steam deck', 'playboy', 'rtl+', 'schallplatten', 'nintendo', 'dessous', 'Spotify', 'neuwagen', 'Linux', 'Film', 'Ps4'];
    const excludeMerchantIDs = ['11901','1261','258','3737','11773','3053','1957','4654','385','152','14380']; // IDs der Händler, die ausgeschlossen werden sollen. Die ID sieht man im Vorschaulink, wenn man mit der Maus über den Namen des Händlers ist.

    // Konvertiert Preis-Strings in numerische Werte
    function convertPriceToNumber(priceString) {
        let numberString = priceString.replace('€', '').trim();
        numberString = numberString.replace(/\./g, '').replace(',', '.');
        return parseFloat(numberString);
    }

    // Überprüft, ob ein Artikel basierend auf Titel oder Händler-ID ausgeschlossen werden soll
    function shouldExcludeArticle(article) {
        const titleElement = article.querySelector('.thread-title');
        const merchantLink = article.querySelector('a[href*="merchant-id="]');

        // Ausschluss basierend auf Keywords im Titel
        if (titleElement && excludeWords.some(word => titleElement.textContent.toLowerCase().includes(word.toLowerCase()))) {
            return true;
        }

        // Ausschluss basierend auf Händler-ID
        if (merchantLink) {
            const merchantIDMatch = merchantLink.getAttribute('href').match(/merchant-id=(\d+)/);
            if (merchantIDMatch) {
                const merchantID = merchantIDMatch[1];
                if (excludeMerchantIDs.includes(merchantID)) {
                    return true;
                }
            }
        }

        return false;
    }

    // Hauptfunktion zur Hervorhebung und ggf. Ausblendung von Artikeln
    function highlightDeals(article) {
        if (shouldExcludeArticle(article)) {
            article.style.display = 'none'; // Artikel ausblenden
            return;
        }

        const originalPriceElement = article.querySelector('.mute--text.text--lineThrough');
        const reducedPriceElement = article.querySelector('.thread-price');
        const warmVoteElement = article.querySelector('.vote-temp--warm');

        if (warmVoteElement) {
            article.style = `background-color: rgba(0, 0, 255, 0.1); opacity: ${Hotnessghost};`;
            article.title = 'Nur "warm" gevoted';
            article.style.display = `${Hotnessvisible}`;

        } else if (originalPriceElement && reducedPriceElement) {
            const originalPrice = convertPriceToNumber(originalPriceElement.textContent);
            const reducedPrice = convertPriceToNumber(reducedPriceElement.textContent);
            const savings = originalPrice - reducedPrice;

            if (savings < Geizfaktor) {
                article.style = `background-color: rgba(255, 121, 0, 0.2); opacity: ${Geizfaktorghost};`;
                article.title = `Ersparnis ist weniger als ${Geizfaktor}€`;
                article.style.display = `${Geizfaktorvisible}`;
            }
        }

        if (reducedPriceElement && !warmVoteElement) {
            const priceValue = convertPriceToNumber(reducedPriceElement.textContent);
            if (priceValue > Maximalpreis) {
                article.style = `background-color: rgba(255, 34, 34, 0.1); opacity: ${Maximalpreisghost};`;
                article.title = `Preis ist über Limit von ${Maximalpreis}€`;
                article.style.display = `${Maximalpreisvisible}`;
            }
        }
    }

    // Verarbeitet alle Artikel auf der Seite
    function processArticles() {
        const articles = document.querySelectorAll('article');
        articles.forEach(highlightDeals);
    }

    // MutationObserver für dynamische Änderungen
    const observer = new MutationObserver(mutations => {
        mutations.forEach(mutation => {
            if (mutation.addedNodes && mutation.addedNodes.length > 0) {
                processArticles();
            }
        });
    });

    const config = { childList: true, subtree: true };
    observer.observe(document.body, config);

    processArticles(); // Initiale Verarbeitung
})();
